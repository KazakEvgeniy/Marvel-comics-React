{"version":3,"file":"static/js/682.8ba5a65f.chunk.js","mappings":"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","sources":["components/ErrorBoundary/ErrorBoundary.js","components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\n\r\n// обработка ошибок\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false\r\n\t}\r\n\r\n\tcomponentDidCatch(err, info) {\r\n\t\tconsole.log(err, info);\r\n\t\tthis.setState({\r\n\t\t\terror: true\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage />\r\n\r\n\t\t}\r\n\t\treturn this.props.children;\r\n\t}\r\n\r\n}\r\n\r\nexport default ErrorBoundary;","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","\r\n// задаём любоое название переменной\r\nimport imgError from './error.gif'\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t// <img src={process.env.PUBLIC_URL + \"/error.gif\"} />\r\n\t\t<img style={{ display: \"block\", width: '250px', height: '250px', margin: '0 auto', objectFit: 'contain' }} src={imgError} alt=\"error\" />\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport { Link } from 'react-router-dom';\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n\tconst [comicsList, setComicsList] = useState([]);\n\tconst [newItemLoading, setnewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(0);\n\tconst [comicsEnded, setComicsEnded] = useState(false);\n\n\tconst { loading, error, getAllComics } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t}, [])\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setnewItemLoading(false) : setnewItemLoading(true);\n\t\tgetAllComics(offset)\n\t\t\t.then(onComicsListLoaded)\n\t}\n\n\tconst onComicsListLoaded = (newComicsList) => {\n\t\tlet ended = false;\n\t\tif (newComicsList.length < 8) {\n\t\t\tended = true;\n\t\t}\n\n\n\t\tsetComicsList([...comicsList, ...newComicsList]);\n\n\t\tsetnewItemLoading(false);\n\t\tsetOffset(offset + 8);\n\t\tsetComicsEnded(ended);\n\n\n\t}\n\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\treturn (\n\n\n\t\t\t\t<li className=\"comics__item\" key={i}>\n\t\t\t\t\t<Link to={`/comics/${item.id}`}>\n\t\t\t\t\t\t<img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\n\t\t\t\t\t\t<div className=\"comics__item-name\">{item.title}</div>\n\t\t\t\t\t\t<div className=\"comics__item-price\">{item.price}</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\n\n\n\t\t\t)\n\t\t})\n\n\t\treturn (\n\n\t\t\t<ul className=\"comics__grid\">\n\t\t\t\t{items}\n\t\t\t</ul>\n\n\t\t)\n\t}\n\n\tconst items = renderItems(comicsList);\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n\treturn (\n\t\t<div className=\"comics__list\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ 'display': comicsEnded ? 'none' : 'block' }}\n\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\tonClick={() => onRequest(offset)}>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default ComicsList;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ErrorBoundary from \"../ErrorBoundary/ErrorBoundary\";\r\nconst ComicsPage = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<AppBanner />\r\n\t\t\t\t<ComicsList />\r\n\t\t\t</ErrorBoundary>\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ComicsPage;","import { useState, useCallback } from \"react\"\r\n\r\n\r\n// собственный хук\r\nexport const useHttp = () => {\r\n\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst request = useCallback(async (url, method = \"GET\", body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, { method, body, headers });\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tsetLoading(false);\r\n\t\t\treturn data;\r\n\r\n\t\t} catch (e) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(e.message)\r\n\t\t\tthrow e\r\n\t\t}\r\n\r\n\t}, []);\r\n\r\n\r\n\tconst clearError = useCallback(() => setError(null), []);\r\n\r\n\treturn { loading, request, error, clearError }\r\n\r\n}","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\r\n\tconst { loading, request, error, clearError } = useHttp();\r\n\r\n\tconst _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n\r\n\tconst _apiKey = \"apikey=c5d6fc8b83116d92ed468ce36bac6c62\";\r\n\tconst _baseOffset = 200;\r\n\r\n\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t};\r\n\r\n\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 200)}...`\r\n\t\t\t\t: \"There is no description\",\r\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tclearError,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetCharacterByName,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t};\r\n};\r\n\r\nexport default useMarvelService;\r\n"],"names":["ErrorBoundary","Component","constructor","arguments","state","error","componentDidCatch","err","info","console","log","this","setState","render","_jsx","ErrorMessage","props","children","AppBanner","_jsxs","className","src","avengers","alt","avengersLogo","style","display","width","height","margin","objectFit","imgError","ComicsList","comicsList","setComicsList","useState","newItemLoading","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","loading","getAllComics","useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","arr","map","item","i","Link","to","concat","id","thumbnail","title","price","renderItems","errorMessage","spinner","Spinner","disabled","onClick","ComicsPage","_Fragment","request","clearError","useHttp","setLoading","setError","useCallback","async","url","method","undefined","body","headers","response","fetch","ok","Error","status","data","json","e","message","_apiBase","_apiKey","_transformCharacter","char","name","description","slice","path","extension","homepage","urls","wiki","comics","_transformComics","_comics$textObjects$","pageCount","language","textObjects","prices","getAllCharacters","results","getCharacter","res","getCharacterByName","getComic"],"sourceRoot":""}